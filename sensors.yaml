#sensors.yaml

  - platform: rest
    name: spaghetti_sensor
    resource: "http://192.168.0.251/printer/objects/query?heater_bed&extruder&print_stats&toolhead&display_status&virtual_sdcard"
    json_attributes_path: "$.result.status"
    json_attributes:
      - heater_bed
      - extruder
      - print_stats
      - toolhead
      - display_status
      - virtual_sdcard
    value_template: 'OK'
  - platform: template
    sensors:
      spaghetti_hotend_target:
        friendly_name: 'Hotend Target'
        value_template: '{{ states.sensor.spaghetti_sensor.attributes["extruder"]["target"]  | float | round(1) }}'
        device_class: temperature
        unit_of_measurement: '°C'
        icon_template: mdi:thermometer
      spaghetti_hotend_actual:
        friendly_name: 'Hotend Actual'
        value_template: '{{ states.sensor.spaghetti_sensor.attributes["extruder"]["temperature"]  | float | round(1) }}'
        device_class: temperature
        unit_of_measurement: '°C'
        icon_template: mdi:thermometer
      spaghetti_bed_target:
        friendly_name: 'Bed Target'
        value_template: '{{ states.sensor.spaghetti_sensor.attributes["heater_bed"]["target"]  | float | round(1) }}'
        device_class: temperature
        unit_of_measurement: '°C'
        icon_template: mdi:thermometer
      spaghetti_bed_actual:
        friendly_name: 'Bed Actual'
        value_template: '{{ states.sensor.spaghetti_sensor.attributes["heater_bed"]["temperature"]  | float | round(1) }}'
        device_class: temperature
        unit_of_measurement: '°C'
        icon_template: mdi:thermometer
      spaghetti_state:
        friendly_name: 'Printer State'
        value_template: '{{ states.sensor.spaghetti_sensor.attributes["print_stats"]["state"]}}'
        icon_template: >
          {% set val =  states.sensor.spaghetti_sensor.attributes["print_stats"]["state"]  %}
          {% if val == 'standby' %}
            mdi:sleep
          {% elif val == 'error' %}
            mdi:alert-circle
          {% elif val == 'printing' %}
            mdi:printer-3d-nozzle
          {% elif val == 'paused' %}
            mdi:pause-circle
          {% elif val == 'complete' %}
            mdi:printer-3d
          {% else %}
            mdi:help-circle
          {% endif %}
      spaghetti_current_print:
        friendly_name: 'Current Print'
        value_template: '{{ states.sensor.spaghetti_sensor.attributes["print_stats"]["filename"]}}'
      spaghetti_current_progress:
        friendly_name: 'Progress'
        value_template: '{{ ((states.sensor.spaghetti_sensor.attributes["display_status"]["progress"])*100) | round(0, "floor") }}'
        unit_of_measurement: '%'
        icon_template: mdi:progress-clock
      spaghetti_print_time:
        friendly_name: 'Time Elapsed'
        value_template: '{{ states.sensor.spaghetti_sensor.attributes["print_stats"]["print_duration"] |timestamp_custom("%H:%M:%S", 0)}}'
        icon_template: mdi:camera-timer
      spaghetti_time_remaining:
        friendly_name: 'Time Remaining'
        value_template: '{{ (((states.sensor.spaghetti_sensor.attributes["print_stats"]["print_duration"]/states.sensor.spaghetti_sensor.attributes["display_status"]["progress"]- states.sensor.spaghetti_sensor.attributes["print_stats"]["print_duration"]) if states.sensor.spaghetti_sensor.attributes["display_status"]["progress"]>0 else 0)) | timestamp_custom("%H:%M:%S", 0)}}'
        icon_template: mdi:timer-sand
      spaghetti_eta:
        friendly_name: 'ETA'
        value_template: '{{ (as_timestamp(now())+2*60*60+((states.sensor.spaghetti_sensor.attributes["print_stats"]["print_duration"]/states.sensor.spaghetti_sensor.attributes["display_status"]["progress"]- states.sensor.spaghetti_sensor.attributes["print_stats"]["print_duration"]) if states.sensor.spaghetti_sensor.attributes["display_status"]["progress"]>0 else 0)) | timestamp_custom("%H:%M:%S", 0)}}'
        icon_template: mdi:av-timer
      spaghetti_nozzletemp:
        friendly_name: 'Nozzle Temperature'
        value_template: '{{[( states.sensor.spaghetti_sensor.attributes["extruder"]["temperature"]  | float | round(1)| string)," / ",( states.sensor.spaghetti_sensor.attributes["extruder"]["target"]  | float | round(1)| string)]|join}}'
        icon_template: mdi:thermometer
      spaghetti_bedtemp:
        friendly_name: 'Bed Temperature'
        value_template: '{{[( states.sensor.spaghetti_sensor.attributes["heater_bed"]["temperature"]  | float | round(1)| string)," / ",( states.sensor.spaghetti_sensor.attributes["heater_bed"]["target"]  | float | round(1)| string)]|join}}'
        icon_template: mdi:thermometer
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
      - type: disk_use
      - type: disk_free
      - type: memory_free
      - type: memory_use_percent
      - type: memory_use
      - type: processor_use
      - type: last_boot
      - type: ipv4_address
        arg: enp4s0
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    # If errors occur, make sure configuration file is encoded as UTF-8
    unit_of_measurement: "°C"
    value_template: "{{ value | multiply(0.001) | round(3) }}"